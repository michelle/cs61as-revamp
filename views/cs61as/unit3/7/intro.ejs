<!-- Introduction 7: Object-Oriented Programming -->

<p>
One of the main advantages of using generic operators is that new
modules can be designed and added to pre-existing modules without
modifying the pre-existing code.  <i>Object oriented programming</i> is
another technique that has this advantage.  This is the second major
programming paradigm that we are studying, after functional
programming.

<p>
The Big Idea of object oriented programming is to have data that knows
how to perform computations on itself.  For example, a number could be
represented as an object that knows how to be added to, subtracted
from, multiplied with, or divided by another number.  This allows
programmers to build modules independently - to create a new data
representation, a programmer creates a <i>class</i>, which is like a
blueprint for objects, that specifies the data to be stored in an
object of that class, and what computations can be performed on such
objects.  The three main ideas that make object-oriented programming
possible are <i>message passing</i>, <i>local state</i> and <i>inheritance</i>.
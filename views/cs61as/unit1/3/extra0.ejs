<!-- Extra for experts 3: Recursion and Iteration -->

<p> 
<b>Extra for experts:</b> 
</br></br><p> 
1.  The <em>partitions</em> of a positive integer are the different ways
to break the integer into pieces.  The number 5 has seven partitions:
 
<p> 
<tt>  <pre>5 (one piece)
    4, 1 (two pieces)
    3, 2 (two pieces)
    3, 1, 1 (three pieces)
    2, 2, 1 (three pieces)
    2, 1, 1, 1 (four pieces)
    1, 1, 1, 1, 1 (five pieces)
</pre></tt> 
 
<p> 
The order of the pieces doesn't matter,
so the partition 2, 3 is the same as the partition 3, 2
and thus isn't counted twice.  0 has one partition.
 
</br></br><p> 
Write a procedure <tt>number-of-partitions</tt> 
that computes the number of partitions of its nonnegative integer argument.
 
</br></br><p> 
2.  Compare the <tt>number-of-partitions</tt> procedure
with the <tt>count-change</tt> procedure by
completing the following statement: 
 
</br></br><p> 
<tt>  <pre>Counting partitions is like making change, where the coins are ...
</pre></tt> 
 
<p> 
3.  (Much harder!)  Now write it to generate an iterative process;
every recursive call must be a tail call.